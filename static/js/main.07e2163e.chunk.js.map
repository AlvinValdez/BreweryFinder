{"version":3,"sources":["components/Brewery.js","components/BreweryList.js","components/BrewerySearch.js","App.js","serviceWorker.js","index.js"],"names":["Brewery","$","mouseup","this","blur","props","item","website_url","react_default","a","createElement","className","target","rel","href","Fragment","name","brewery_type","street","city","state","displayWebsiteUrl","Component","BreweryList","backToSearch","brewery","undefined","map","Brewery_Brewery","key","id","_this","react_typed_default","strings","typeSpeed","startDelay","backDelay","backSpeed","loop","loopCount","showCursor","type","onClick","displayResult","BrewerySearch","search","searchBy","updateSearch","event","setState","value","onSearchClick","handleSearch","onSearchChange","placeholder","onChange","checked","htmlFor","PAGE_HOME","PAGE_RESULTS","App","items","isLoaded","url","searchTerm","searchByParam","page","filterResults","data","filter","toLowerCase","includes","console","log","concat","e","whatToDisplay","BreweryList_BreweryList","BrewerySearch_BrewerySearch","fetch","json","jsonData","cleanData","_context","t0","previousProps","previousState","fetchBreweryData","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07e2163e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nexport default class Brewery extends Component {\r\n  componentDidMount() {\r\n    $(\".btn\").mouseup(function() {\r\n      $(this).blur();\r\n    });\r\n  }\r\n\r\n  displayWebsiteUrl() {\r\n    if (this.props.item.website_url === \"\") {\r\n      return;\r\n    } else {\r\n      return (\r\n        <a\r\n          className=\"btn btn-primary\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href={this.props.item.website_url}\r\n        >\r\n          Check Them Out\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n          <div className=\"card h-100\">\r\n            <div className=\"card-body flex-column h-100\">\r\n              <h5 className=\"Kreon-Text text-capitalize\">\r\n                {this.props.item.name}\r\n              </h5>\r\n              <h6 className=\"text-capitalize\">\r\n                <strong>Type: </strong>\r\n                {this.props.item.brewery_type}\r\n              </h6>\r\n              <h6 className=\"text-capitalize\">{this.props.item.street}</h6>\r\n              <h6 className=\"text-capitalize\">\r\n                {this.props.item.city}, {this.props.item.state}\r\n              </h6>\r\n              {this.displayWebsiteUrl()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Brewery from \"./Brewery\";\r\nimport Typed from \"react-typed\";\r\n\r\nexport default class BreweryList extends Component {\r\n  onClick() {\r\n    this.props.backToSearch();\r\n  }\r\n\r\n  displayResult(brewery) {\r\n    if (brewery[0] === undefined) {\r\n      return (\r\n        <h1 className=\"Kreon-Text text-center\">\r\n          We couldn't find anything in that location...\r\n        </h1>\r\n      );\r\n    } else {\r\n      return brewery.map(item => {\r\n        return <Brewery key={item.id} item={item} />;\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { brewery } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"pt-5\">\r\n          <nav className=\"navbar fixed-top navbar-dark bg-dark py-2 mb-5\">\r\n            <Typed\r\n              strings={[\"Time to drink\", \"Time to party\", \"Time to relax\"]}\r\n              typeSpeed={70}\r\n              startDelay={1200}\r\n              backDelay={3000}\r\n              backSpeed={60}\r\n              loop={true}\r\n              loopCount={30}\r\n              showCursor={true}\r\n              className={\"h4 mx-auto Quicksand-Text\"}\r\n            />\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-info\"\r\n                onClick={() => this.onClick()}\r\n              >\r\n                Back to Search\r\n              </button>\r\n            </form>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"container my-5\">\r\n          <div className=\"row\">{this.displayResult(brewery)}</div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Typed from \"react-typed\";\r\n\r\nexport default class BrewerySearch extends Component {\r\n  state = {\r\n    search: \"Boston\",\r\n    searchBy: \"city\"\r\n  };\r\n\r\n  updateSearch = event => {\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  onSearchClick = () => {\r\n    this.props.handleSearch(this.state.search);\r\n  };\r\n\r\n  onSearchChange = event => {\r\n    this.setState({ searchBy: event.target.value });\r\n    this.props.searchBy(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"jumbotron text-center\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h1 className=\"Quicksand-Text Glow\">Brewery Finder</h1>\r\n              <Typed\r\n                strings={[\r\n                  \"Find a brewery in your hometown\",\r\n                  \"Find your new hangout\",\r\n                  \"Find your new favorite beer\",\r\n                  \"Find the answer to your problems\"\r\n                ]}\r\n                typeSpeed={70}\r\n                startDelay={1200}\r\n                backDelay={3000}\r\n                backSpeed={60}\r\n                loop={true}\r\n                loopCount={30}\r\n                showCursor={true}\r\n                className={\"h4\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\r\n              <h2 className=\"text-capitalize\">\r\n                search for breweries in your {this.state.searchBy}\r\n              </h2>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search here...\"\r\n                  onChange={this.updateSearch}\r\n                />\r\n                <button\r\n                  className=\"btn btn-primary mx-2\"\r\n                  onClick={this.onSearchClick}\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col text-center mt-2\">\r\n              <div className=\"form-check form-check-inline\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"searchByOptions\"\r\n                  id=\"CityRadio\"\r\n                  value=\"city\"\r\n                  onChange={this.onSearchChange}\r\n                  checked={this.state.searchBy === \"city\"}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"CityRadio\">\r\n                  City\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"searchByOptions\"\r\n                  id=\"stateRadio\"\r\n                  value=\"state\"\r\n                  onChange={this.onSearchChange}\r\n                  checked={this.state.searchBy === \"state\"}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"stateRadio\">\r\n                  State\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer className=\"mx-auto py-3\">\r\n          <div className=\"container text-center\">\r\n            Powered By{\" \"}\r\n            <span className=\"text-muted\">\r\n              <a\r\n                href=\"https://www.openbrewerydb.org/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Open Brewery DB\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BreweryList from \"./components/BreweryList\";\r\nimport BrewerySearch from \"./components/BrewerySearch\";\r\n\r\nconst PAGE_HOME = \"home\";\r\nconst PAGE_RESULTS = \"search_results\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    items: [],\r\n    isLoaded: false,\r\n    url: \"https://api.openbrewerydb.org/breweries\",\r\n    searchTerm: \"Boston\",\r\n    searchByParam: \"city\",\r\n    page: PAGE_HOME\r\n  };\r\n\r\n  async fetchBreweryData() {\r\n    try {\r\n      this.setState({ isLoaded: false });\r\n      const data = await fetch(this.state.url);\r\n      const jsonData = await data.json();\r\n      const cleanData = this.filterResults(jsonData);\r\n      this.setState({\r\n        isLoaded: true,\r\n        items: cleanData\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  filterResults = data => {\r\n    // Exclude items that contains \"Brewery In Planning\"\r\n    return data.filter(\r\n      item =>\r\n        !item.name.toLowerCase().includes(\"Brewery In Planning\".toLowerCase())\r\n    );\r\n  };\r\n\r\n  backToSearch = () => {\r\n    this.setState({\r\n      page: PAGE_HOME\r\n    });\r\n  };\r\n\r\n  // searchTerm is the value from the input/search bar\r\n  handleSearch = searchTerm => {\r\n    const searchByParam = this.state.searchByParam;\r\n    console.log(searchByParam);\r\n    this.setState({\r\n      url: `https://api.openbrewerydb.org/breweries?by_${searchByParam}=${searchTerm}`,\r\n      searchTerm: searchTerm,\r\n      page: PAGE_RESULTS\r\n    });\r\n  };\r\n\r\n  // sets the searchByParam to either city or state\r\n  searchBy = e => {\r\n    this.setState({\r\n      searchByParam: e\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    const searchChanged = this.state.url !== previousState.url;\r\n    if (searchChanged) {\r\n      this.fetchBreweryData();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBreweryData();\r\n  }\r\n\r\n  whatToDisplay = page => {\r\n    if (page === PAGE_RESULTS) {\r\n      return (\r\n        <BreweryList\r\n          brewery={this.state.items}\r\n          backToSearch={this.backToSearch}\r\n        />\r\n      );\r\n    } else if (page === PAGE_HOME) {\r\n      return (\r\n        <BrewerySearch\r\n          handleSearch={this.handleSearch}\r\n          searchBy={this.searchBy}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var { isLoaded } = this.state;\r\n    if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <React.Fragment>{this.whatToDisplay(this.state.page)}</React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}